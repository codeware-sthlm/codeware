# A subset of Nx environment variables that can be useful during development.
# For a full list of environment variables, see
# https://nx.dev/reference/environment-variables#environment-variables

# Example tweaking env variables:
# https://nx.dev/extending-nx/recipes/project-graph-plugins#visualizing-the-project-graph

# If set to `false`, disables the project graph cache. Most useful when developing a plugin that modifies the project graph.
NX_CACHE_PROJECT_GRAPH=true

# If set to `false`, disables the Nx daemon process. Disable the daemon to print console.log statements in plugin code you are developing.
NX_DAEMON=true

# Uncomment to enable native logging for the cache and database. Use for debugging Nx internals in combination with NX_VERBOSE_LOGGING=true.
#NX_NATIVE_LOGGING=nx::native::cache,nx::native::db

# If set to `true`, disables the Nx Cloud.
NX_NO_CLOUD=false

# The number of tasks Nx should run in parallel. Overrides any configured value inside nx.json.
NX_PARALLEL=

# If set to `true`, will print debug information useful for for profiling executors and Nx itself.
NX_PERF_LOGGING=false

# Prepend `NX_PROFILE=profile.json` before running targets with Nx to generate a file that be loaded in Chrome dev tools, to visualize the performance of Nx across multiple processes.
NX_PROFILE=

# If set to `true`, wil rerun the tasks even when the results are available in the cache.
NX_SKIP_NX_CACHE=false

# If set to `true`, will print debug information useful for troubleshooting.
NX_VERBOSE_LOGGING=false

### Plugins variables ###

# If set to `true`, will print E2E debug information useful for troubleshooting.
CDWR_DEBUG_LOGGING=true

# Package manager to use in E2E tests; `npm`, `pnpm`, `yarn` (todo: `bun`)
CDWR_E2E_PACKAGE_MANAGER=

# Verdaccio host; 'localhost' is default Linux and 'host.docker.internal' is for macOS and Windows
CDWR_E2E_VERDACCIO_HOST='host.docker.internal'

### Side effect workarounds ###

# Fixing a problem in E2E when package manager `yarn` is tested and `packageManager` is defined in workspace `package.json`
# https://github.com/yarnpkg/yarn/issues/9015
SKIP_YARN_COREPACK_CHECK=0

# Set global yarn silent mode to prevent JSON output with extra leading and trailing data.
# It's a problem when we run `nx show project --json` since Nx doesn't provide clean JSON output for Yarn 1.
YARN_SILENT=true
