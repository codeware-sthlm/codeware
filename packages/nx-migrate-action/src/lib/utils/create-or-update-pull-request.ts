import * as github from '@actions/github';
import { withGitHub } from '@cx/core';

import { getFeatureBranchName } from './get-feature-branch-name';
import { lookupPullRequest } from './lookup-pull-request';
import type { MigrateConfig, VersionInfo } from './types';

export const createOrUpdatePullRequest = async (
  config: MigrateConfig,
  versionInfo: Pick<VersionInfo, 'currentVersion' | 'latestVersion'>,
  status: { testsPass?: boolean; e2ePass?: boolean }
): Promise<number> => {
  const { mainBranch, token } = config;
  const octokit = github.getOctokit(token);

  const { currentVersion, latestVersion } = versionInfo;
  const { e2ePass, testsPass } = status;

  const branchName = getFeatureBranchName(latestVersion);

  const prTitle = `Update @nx/workspace to ${latestVersion}`;
  const prBody = `Update Nx from ${currentVersion} to ${latestVersion}

${testsPass === true ? '✅ Tests passed' : testsPass === false ? '⚠️ Tests failed during migration' : '⚫ No tests were run'}
${e2ePass === true ? '✅ E2E tests passed' : e2ePass === false ? '⚠️ E2E tests failed during migration' : '⚫ No E2E tests were run'}

> Auto-generated by [@cdwr/nx-migrate-action][1]

[1]: https://github.com/codeware-sthlm/codeware/packages/nx-migrate-action
`;

  const existingPR = await lookupPullRequest(config, latestVersion);

  // Create a new PR if none exists
  if (!existingPR) {
    const {
      data: { number: newPR }
    } = await withGitHub(() =>
      octokit.rest.pulls.create({
        ...github.context.repo,
        title: prTitle,
        body: prBody,
        head: branchName,
        base: mainBranch,
        draft: false
      })
    );
    return newPR;
  }

  // Update existing PR with possibly the same details.
  // TODO: Is this a bad pattern?
  // Could it have been updated by someone manually, which will now be overwritten?
  await withGitHub(() =>
    octokit.rest.pulls.update({
      ...github.context.repo,
      pull_number: existingPR,
      title: prTitle,
      body: prBody
    })
  );

  return existingPR;
};
