import * as github from '@actions/github';
import { RestEndpointMethodTypes } from '@octokit/plugin-rest-endpoint-methods';

import { getFeatureBranchName } from './get-feature-branch-name';
import { VersionInfo } from './types';

export const createPullRequest = async (
  token: string,
  mainBranch: string,
  versionInfo: Pick<VersionInfo, 'currentVersion' | 'latestVersion'>,
  status: { testsPass: boolean; e2ePass: boolean }
): Promise<RestEndpointMethodTypes['pulls']['create']['response']> => {
  const octokit = github.getOctokit(token);

  const { currentVersion, latestVersion } = versionInfo;
  const { e2ePass, testsPass } = status;

  const branchName = getFeatureBranchName(latestVersion);

  const prTitle = `Update @nx/workspace to ${latestVersion}`;
  const prBody = `Update Nx from ${currentVersion} to ${latestVersion}

${!testsPass ? '⚠️ Tests failed during migration' : '✅ Tests passed'}
${!e2ePass ? '⚠️ E2E tests failed during migration' : '✅ E2E tests passed'}

> Auto-generated by [@cdwr/nx-migrate-action][1]

[1]: https://github.com/codeware-sthlm/codeware/packages/nx-migrate-action
`;

  return await octokit.rest.pulls.create({
    ...github.context.repo,
    title: prTitle,
    body: prBody,
    head: branchName,
    base: mainBranch,
    draft: false
  });
};
