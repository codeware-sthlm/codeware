import { z } from 'zod';

/**
 * Environment variables
 */
export const EnvSchema = z.object({
  // Current working directory is required in payload.config.ts when using Docker.
  // Since that file is also used for the client side, process.cwd() is not allowed
  // to be used. Instead, we pass it via environment variable.
  CWD: z
    .string({
      description: 'Current working directory'
    })
    .default(process.cwd()),
  DATABASE_URL: z
    .string({
      description: 'Database connection string including the database name'
    })
    .min(1),
  DISABLE_DB_CONNECT: z.coerce
    .boolean({
      description:
        `Disable database connection when you need to start Payload without a database.
This can be useful when running Payload in end-to-end tests.`
    })
    .default(false),
  LOG_LEVEL: z
    .enum(['fatal', 'error', 'warn', 'info', 'debug', 'trace', 'silent'])
    .default('info'),
  NODE_ENV: z
    .enum(['development', 'production', 'test'])
    .default('development'),
  PAYLOAD_SECRET: z
    .string({
      description: 'Payload secret key',
    })
    .min(1),
  PORT: z.coerce
    .number({
      description: 'Port to run the server on'
    })
    .default(3000)
});

export type Env = z.infer<typeof EnvSchema>;
